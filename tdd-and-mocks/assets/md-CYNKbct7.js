import{b as r,o as a,w as i,g as l,C as e,v as s,x as c,B as u}from"./modules/vue-yEidkMur.js";import{I as p}from"./slidev/default-Bz38XMcD.js";import{u as f,f as m}from"./slidev/context-ui2L8od1.js";import"./index-UpKHkio-.js";import"./modules/shiki-DTuP-x8k.js";const P={__name:"how_to_use_in_c.md__slidev_35",setup(d){const{$clicksContext:o,$frontmatter:n}=f();return o.setup(),(_,t)=>(a(),r(p,s(c(u(m)(u(n),34))),{default:i(()=>t[0]||(t[0]=[l("h1",null,"Other Functions",-1),l("ul",null,[l("li",null,[e("Expecting Several Calls "),l("ul",null,[l("li",null,[l("code",null,'mock().expectNCalls(5, "productionCode");')]),l("li",null,[e("In TDD I tend to just for loop my "),l("code",null,"expectOneCall")])])]),l("li",null,[e("Buffers "),l("ul",null,[l("li",null,[e("When "),l("code",null,"uint8_t *buffer")]),l("li",null,[l("code",null,'.withMemoryBufferParameter("buffer", buffer, length);')])])]),l("li",null,[e("Output Params "),l("ul",null,[l("li",null,"Same idea as returning, but for when is a modified pass by reference"),l("li",null,[l("code",null,'mock().expectOneCall("Foo").withOutputParameterReturning("bar", &outputValue, sizeof(outputValue));')]),l("li",null,[l("code",null,'mock().actualCall("Foo").withOutputParameter("bar", bar);')])])])],-1)])),_:1,__:[0]},16))}};export{P as default};
